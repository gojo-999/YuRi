const fs = require("fs");
const path = __dirname + "/cache/vip.json";

module.exports = {
  config: {
    name: "vip",
    version: "2.1",
    author: "Amit Max тЪб",
    role: 2,
    shortDescription: "VIP system with message feature",
    category: "admin",
    guide: {
      en: "{pn} add [@tag/reply/uid] | remove [@tag/reply/uid] | list\n{pn} [message] (send to all VIPs)\n{pn} reply [@reply] (reply to VIP message)"
    }
  },

  langs: {
    en: {
      missingMessage: "рж╣рж╛рж▓рж╛! рждрзБржЗ VIP ржирж╛, ржПржЗржЯрж╛ ржЗржЙржЬ ржХрж░рждрзЗ ржЖржЗржЫрзЛрж╕? ржнрж╛ржЧ ржПржЦрж╛ржи ржерзЗржЗржХрж╛, ржирж╛ржЯржХ ржХрж░рж┐рж╕ ржирж╛!",
      sendByGroup: "\n- ржПржХржЯрж╛ ржжрж▓ржмрж╛ржЬ ржЧрзНрж░рзБржк ржкрж╛ржарж╛ржЗржЫрзЗ: %1\n- ржерзНрж░рзЗржб ржЖржЗржбрж┐ржГ %2",
      sendByUser: "\n- ржПржХржЦрж╛ржи ржмрзЗрж╣рж╛рзЯрж╛ ржЗржЙржЬрж╛рж░ ржкрж╛ржарж╛ржЗржЫрзЗ рж░рзЗ ржнрж╛ржЗ!",
      content: "\n\nVIP ржПрж░ ржЪрж┐рж▓рзНрж▓рж╛-ржЪрж┐рж▓рзНрж▓рж┐ржГ\n%1\nрждрзЛрж░рзЗ ржХржЗрждрзЗ рж╣ржЗрж▓рзЗ ржирж┐ржЪрзЗ рж░рж┐ржкрзНрж▓рж╛ржЗ ржжрзЗ, ржирж╛ ржкрж╛рж░рж▓рзЗ ржЪрзБржкржЪрж╛ржк ржерж╛ржХ!",
      success: "VIP ржжрзЗрж░ ржмрж╛ржЪрзНржЪрж╛ржжрзЗрж░ ржХрж╛ржЫрзЗ рждрзЛрж░ ржмрж╛рж░рзНрждрж╛ ржкрж╛ржарж╛рзЯрж╛ ржжрж┐ржЫрж┐!\n%2\nржжрзЗржЦрж┐ ржПржмрж╛рж░ ржХрзЗржбрж╛ ржХрзНржпрж╛ржБржХ ржХрзНржпрж╛ржБржХ ржХрж░рзЗ!",
      failed: "ржлрзЗржЗрж▓ ржорж╛рж░ржЫрзЗ ржнрж╛ржЗ! VIP ржжрзЗрж░ ржХрж╛ржЫрзЗ ржкрж╛ржарж╛ржЗрждрзЗ ржЧрж┐рзЯрж╛ ржмржЯрзЗрж░ ржмрж╛ржкрзЛ рж╣ржЗржЫрзЗред\n%2\nржХржирж╕рзЛрж▓рзЗ ржпрж╛ржЗрзЯрж╛ ржирж┐ржЬрзЗрж░рзЗ ржерж╛ржкрзНржкрзЬ ржорж╛рж░!",
      reply: "ЁЯУН VIP %1 ржПрж░ ржХрж╛ржирзНржирж╛-ржХрж╛ржЯрж┐:\n%2",
      replySuccess: "VIP ржкрзЛрж▓рж╛рж░рзЗ ржЧрж╛рж▓рж┐ ржкрж╛ржарж╛ржЗржЫрж┐, ржПржЦржи ржжрзЗржЦ ржХрзЗржоржирзЗ ржорзБржЦ рж▓рзБржХрж╛рзЯ!",
      feedback: "ЁЯУЭ VIP ржкрзЛрж▓рж╛ %1 ржПрж░ ржорзБржЦрзЗрж░ ржЙржкрж░ ржЭрж╛рзЬ:\n- UID: %2\n%3\n\nржмрж╛рж░рзНрждрж╛ржЯрж╛ ржкрзЬ:\n%4",
      replyUserSuccess: "ржЧрж╛рж▓рж┐ржЯрж╛ ржарж┐ржХ ржарж╛ржХ ржжрж┐рзЯрж╛ ржжрж┐ржЫрж┐рж╕ ржнрж╛ржЗ, ржкрж╛ржарж╛рзЯрж╛ ржжрж┐рж▓рж╛ржо рж╕рж░рж╛рж╕рж░рж┐ ржорзБржЦрзЗ!",
      noAdmin: "рждрзБржЗ ржПржбржорж┐ржи ржирж╛ ржнрж╛ржЗ! ржЖржЧрзЗ ржЧрж┐рзЯрж╛ ржЪрж╛ ржмрж╛ржирж╛рж╕, рждрж╛рж░ржкрж░ ржЖрзЯ ржмржЯ ржирзЗрзЬрж╛ржЪрж╛рзЬрж╛ ржХрж░рждрзЗ!",
      addSuccess: "VIP рж▓рж┐рж╕рзНржЯрзЗ ржврзБржХржЫрж┐рж╕ ржорж╛ржирзЗ ржПржЦржи рждрзБржЗ ржПржХржЯрзБ ржЧрж░ржо! ржмрзЗрж╢рж┐ ржЧрзНржпрж╛ржЮрзНржЬрж╛ржо ржХржЗрж░рзЛ ржирж╛!",
      alreadyInVIP: "ржПржЗ ржкрзЛрж▓рж╛рж░рзЗ ржЖржмрж╛рж░ VIP ржмрж╛ржирж╛ржЗрждрзЗ ржЪрж╛рж╕? ржЖржЧрзЗржЗ ржврзБржХрж╛, ржЖрж░ ржХрж┐ржЫрзБрж░ ржЕржнрж╛ржм ржЖржЫрзЗ?",
      removeSuccess: "VIP рж▓рж┐рж╕рзНржЯ ржерзЗржЗржХрж╛ ржЫрж╛ржБржЯрж╛ржЗ ржХржЗрж░рж╛ ржжрж┐ржЫрж┐! ржПржЦржи рждрзБржЗ ржШрж╛рж╕ ржЦрж╛, ржЖрж░ ржЪрзБржк ржерж╛ржХ!",
      notInVIP: "VIP рждрзЛ ржжрзВрж░рзЗрж░ ржХржерж╛, ржПржЗ ржкрзЛрж▓рж╛ рждрзЛ ржкрзЛрж▓рж╛ржкрж╛ржирзЗрж░ ржкрзЗржЫржирзЗ ржШрзБржЗрж░рж╛ ржмрзЗрзЬрж╛рзЯ!",
      list: "ржПржЗ рж╣ржЗрж▓рзЛ VIP ржкрзЛрж▓рж╛ржкрж╛ржи:\n%1\nрждрж╛ржжрзЗрж░рзЗ ржХрж┐ржЫрзБ ржХржЗрж▓рзЗ ржЖржЧрзЗ ржкрж╛рж╕ржУрзЯрж╛рж░рзНржб ржЪрж╛ржЗржмрж┐!",
      vipModeEnabled: "VIP ржорзЛржб ржЕржи ржХрж░рж▓рж╛ржо! ржПржЦржи ржнрж┐ржЖржЗржкрж┐ ржирж╛ рж╣ржЗрж▓рзЗ рждрзЛрж░рзЗ ржмржЯ ржШрж╛рзЬ ржзржЗрж░рж╛ ржмрж╛ржЗрж░ ржХржЗрж░рж╛ ржжрж┐ржмрзЗ!",
      vipModeDisabled: "VIP ржорзЛржб ржЕржл рж╣ржЗржЫрзЗ! ржПржЦржи рж╕ржмрж╛рж░рзЗ рж▓рзНржпрж╛рж╣рж╛ржЗ ржжрзЗ, ржмрж╛ржБрж╢ ржжрзЗ, ржЭрж╛рзЬ ржжрзЗ!"
    }
  },

  onStart: async function ({ message, args, event, threadsData, usersData, role, getLang }) {
    const data = fs.existsSync(path) ? JSON.parse(fs.readFileSync(path)) : [];

    if (args[0] == "add") {
      if (role < 2) return message.reply(getLang("noAdmin"));
      const uid = event.messageReply?.senderID || event.mentions?.[Object.keys(event.mentions)[0]] || args[1];
      if (!uid) return message.reply("UID ржжрж┐ржи ржмрж╛ ржХрж╛ржЙрж░рзЗ reply/tag ржХрж░рзЗржиред");
      if (data.includes(uid)) return message.reply(getLang("alreadyInVIP"));
      data.push(uid);
      fs.writeFileSync(path, JSON.stringify(data, null, 2));
      return message.reply(getLang("addSuccess"));
    }

    if (args[0] == "remove") {
      if (role < 2) return message.reply(getLang("noAdmin"));
      const uid = event.messageReply?.senderID || event.mentions?.[Object.keys(event.mentions)[0]] || args[1];
      if (!uid) return message.reply("UID ржжрж┐ржи ржмрж╛ ржХрж╛ржЙрж░рзЗ reply/tag ржХрж░рзЗржиред");
      if (!data.includes(uid)) return message.reply(getLang("notInVIP"));
      data.splice(data.indexOf(uid), 1);
      fs.writeFileSync(path, JSON.stringify(data, null, 2));
      return message.reply(getLang("removeSuccess"));
    }

    if (args[0] == "list") {
      const names = await Promise.all(data.map(id => usersData.getName(id)));
      return message.reply(getLang("list", names.map((name, i) => `${i + 1}. ${name}`).join("\n")));
    }

    if (args[0] == "reply") {
      if (role < 2) return message.reply(getLang("noAdmin"));
      if (!event.messageReply) return message.reply("Reply ржжрж┐рзЯрзЗ VIP message ржзрж░!");
      const uid = event.messageReply.senderID;
      message.send({
        body: getLang("reply", usersData.getName(uid), args.slice(1).join(" ")),
        mentions: [{ id: uid }]
      });
      return message.reply(getLang("replyUserSuccess"));
    }

    // send message to all VIPs
    if (!args[0]) return message.reply(getLang("missingMessage"));
    const msg = args.join(" ");
    let success = 0, failed = 0;
    for (const uid of data) {
      try {
        await message.send({
          body: getLang("feedback", usersData.getName(event.senderID), event.senderID,
            event.threadID ? getLang("sendByGroup", threadsData.get(event.threadID)?.threadName || "Unknown", event.threadID)
                           : getLang("sendByUser"),
            msg),
        }, uid);
        success++;
      } catch (e) {
        failed++;
      }
    }
    return message.reply(getLang("success", `${success} ржкрж╛ржарж╛ржирзЛ, ${failed} ржлрзЗржЗрж▓`));
  }
};
